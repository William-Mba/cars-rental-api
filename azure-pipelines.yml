trigger:
- master

pool:
  name: svr-cr
  vmImage: ubuntu-latest

parameters:
  - name: MajorVersion
    type: number
    default: 1
  - name: MinorVersion
    type: number
    default: 0
  - name: Projects
    type: string
    default: '**/*.csproj'
  - name: ProjectName
    type: string
    default: 'cars-rental-api'
  - name: TestProjects
    type: string
    default: '**/*[Tt]ests/*.csproj'
  - name: AssemblyVersion
    type: string
    default: "0.0.0.0"
  - name: WorkingDirectory
    type: string
    default: $(Build.SourcesDirectory)
  - name: ArtifactName
    type: string
    default: drop
  - name: BuildConfiguration
    type: string
    default: Release

variables:
  BuildConfiguration: 'Release'
  dotnetSdkVersion: 6.x
  buildDate: '$(Get-Date -Format yyyyMMdd:hhmmss)'
  baseVersion: '${{ parameters.MajorVersion }}.${{ parameters.MinorVersion }}'
  baseVersionBeta: ${{ variables.baseVersion }}.0-beta
  ${{ if or(eq(variables['Build.SourceBranch'], 'refs/heads/master'), startsWith(variables['Build.SourceBranch'], 'refs/heads/release/')) }}:
    versionRevision: $[counter(variables['baseVersion'], 0)]
    version: ${{ variables.baseversion }}.$(versionRevision)
    assemblyVersion: ${{ variables.version }}

  ${{ if and(ne(variables['Build.SourceBranch'], 'refs/heads/master'), not(startsWith(variables['Build.SourceBranch'], 'refs/heads/release/'))) }}:
    versionRevision: $[counter(variables['baseVersionBeta'], 0)]
    version: ${{ variables.baseVersionBeta }}.$(versionRevision)
    assemblyVersion: ${{ variables.baseVersion }}.0.$(versionRevision)

  versionLong: '${{ parameters.MajorVersion }}.${{ parameters.MinorVersion }}.$(versionRevision).$(Build.BuildID)'

steps:
- task: JavaToolInstaller@0
  displayName: 'Use JDK'
  inputs:
    versionSpec: '11'
    jdkArchitectureOption: 'x64'
    jdkSourceOption: 'LocalDirectory'
    jdkFile: 'C:\agents\svr-cr\jdk-11.0.18_windows-x64_bin.zip'
    cleanDestinationDirectory: false
- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'sonarcloud'
    organization: '10ference'
    scannerMode: 'MSBuild'
    projectKey: '10ference_cars-rental-api'
    projectName: 'cars-rental-api'

- task: UseDotNet@2
  displayName: 'Use .NET'
  inputs:
    packageType: 'sdk'
    version: '$(dotnetSdkVersion)'

- task: DotNetCoreCLI@2
  displayName: 'Restore packages'
  inputs:
    command: 'restore'
    projects: '${{ parameters.Projects }}'

- task: DotNetCoreCLI@2
  displayName: "Build project" 
  inputs:
    projects: '${{ parameters.Projects }}'
    arguments: '--configuration $(BuildConfiguration) -p:VersionPrefix=$(versionLong)'

- script: echo Version= $(versionLong)
  displayName: "Build Version"

- task: SonarCloudAnalyze@1

- task: DotNetCoreCLI@2
  displayName: "Execute Tests" 
  inputs:
    command: test
    projects: '${{ parameters.TestProjects }}'
    arguments: '--configuration $(BuildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: '[publish] Publish ${{ parameters.BuildConfiguration }}'
  inputs:
    command: publish
    arguments: >
      --configuration ${{ parameters.BuildConfiguration }} 
      --output $(Build.ArtifactStagingDirectory)\publish\${{ parameters.ProjectName }}.$(Build.BuildNumber)
    zipAfterPublish: True
    workingDirectory: ${{ parameters.WorkingDirectory }}
    publishWebProjects: true
    modifyOutputPath: false
    projects: ${{ parameters.Projects }}

- task: PublishBuildArtifacts@1
  displayName: '[publish] Build Artifacts'
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)\publish\${{ parameters.ProjectName }}.$(Build.BuildNumber)'
    artifactName: ${{ parameters.ArtifactName }}

- task: SonarCloudPublish@1
  displayName: "Publish SonarCloud Results" 
  inputs:
    pollingTimeoutSec: '300'