trigger:
- master

pool:
  name: Default
  vmImage: ubuntu-latest

parameters:
  - name: RestoreBuildProjects
    type: string
    default: '**/*.csproj'
  - name: TestProjects
    type: string
    default: '**/*[Tt]ests/*.csproj'

variables:
  Major: '1'
  Minor: '0'
  Patch: '0'
  BuildConfiguration: 'Release'
  dotnetSdkVersion: 6.0.x


steps:
- task: UseDotNet@2
  displayName: 'SÃ©lection de la version de .NET'
  inputs:
    packageType: 'sdk'
    version: '$(dotnetSdkVersion)'
- task: DotNetCoreCLI@2
  displayName: "[Restore] Restoring packages.." 
  inputs:
    command: restore
    projects: '$(parameters.RestoreBuildProjects)'

- task: DotNetCoreCLI@2
  displayName: "[Build] Building packages.." 
  inputs:
    projects: '$(parameters.RestoreBuildProjects)'
    arguments: '--configuration $(BuildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: "[Test] Executing Tests.." 
  inputs:
    command: test
    projects: '$(parameters.TestProjects)'
    arguments: '--configuration $(BuildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: "[Publish] Publishing artefacts.." 
  inputs:
    command: publish
    publishWebProjects: True
    arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'
    zipAfterPublish: True

- task: PublishBuildArtifacts@1
  displayName: '[Publish] Publish Artifact'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'
  condition: succeededOrFailed()

- task: DotNetCoreCLI@2
  inputs:
    command: pack
    versioningScheme: byPrereleaseNumber
    majorVersion: '$(Major)'
    minorVersion: '$(Minor)'
    patchVersion: '$(Patch)'
  displayName: "Packaging.." 

- task: NuGetAuthenticate@0
  displayName: '[Authentication] NuGet Authentication'
  inputs:
    nuGetServiceConnections: az-artifacts-sc

- script: |
    dotnet build $(Build.ArtifactStagingDirectory) --configuration $(BuildConfiguration)
    dotnet pack $(Build.ArtifactStagingDirectory) -p:PackageVersion='$(Major).$(Minor).$(Patch).$(rev:.r)' --output $(Build.ArtifactStagingDirectory) --configuration <CONFIGURATION>
    dotnet nuget push $(Build.ArtifactStagingDirectory) --source https://pkgs.dev.azure.com/10ference/db55ada9-b434-4bdc-bfd5-90d3c7fae142/_packaging/carsrental-api/nuget/v3/index.json --api-key "az-artifacts-sc"
  displayName: "Build, pack and push"  
